{"version":3,"file":"static/js/154.3647c09e.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/Contacts/ContactForm/ContactForm.styled.jsx","components/Contacts/ContactForm/ContactForm.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactItem/ContactItem.styled.jsx","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js","components/Contacts/ContactList/ContactItem/ContactItem.jsx","components/Contacts/ContactList/ContactList.jsx","components/Contacts/Filter/Filter.styled.jsx","components/Contacts/Filter/Filter.jsx","components/Notification/Notification.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n    /* max-height: 80vh;\n    max-width: 80vw; */\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    flex-direction: column;\n    /* font-size: 40px; */\n    color: #010101;\n    margin-left: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: 2px solid #00000024;\n  border-radius: 4px;\n  padding: 20px 200px 20px 20px;\n  box-shadow: 0px 4px 10px 4px #9e9e9e;\n\n  &:hover, &:focus {\n    /* box-shadow: 0px 4px 10px 4px #9e9e9e;\n    transform: scale(1.1); */\n  }\n`;\n\nexport const Input = styled.input`\n    display: block;\n    margin-top: 10px;\n    margin-bottom: 20px;\n    border-color: #00000024;\n    border-radius: 2px;\n    outline: 0px;\n    \n    &:hover, &:focus {\n        box-shadow: 0px 0px 3px 3px #2196f3;\n        transform: scale(1.15);\n    }\n`;\n\nexport const Button = styled.button`\n    padding: 0 10px;\n    cursor: pointer;\n    border-color: #00000024;\n    border-radius: 2px;\n    background-color: #00000005;\n\n    &:hover, &:focus {\n\n        background-color: #2196f3;\n        transform: scale(1.22);\n    }\n`;","import PropTypes from 'prop-types';\nimport { Form, Input, Button } from './ContactForm.styled';\nimport { useDispatch } from \"react-redux\";\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { addContact } from 'redux/contacts/contactsOperetions'; \n\nexport default function ContactForm() {\nconst [name, setName] = useState(\"\");\nconst [number, setNumber] = useState(\"\");\n\nconst dispatch = useDispatch();\n\nconst nameId = nanoid();\nconst numberId = nanoid();\n\n\nconst handleChange = (evt) => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n       case 'number':\n        setNumber(value);\n        break;\n    \n      default:\n        return;\n    }\n  }\n  \nconst handleSubmit = (evt) => {\n  evt.preventDefault();\n      onAddContact({ name, number });\n      setName(\"\");\n      setNumber(\"\");\n    }\n\n\nconst onAddContact = (contact) => {\n  const action = addContact(contact);\n      console.log(\"contact\", contact);\n\n      dispatch(action);\n}\n  \n  return (\n    <Form onSubmit={handleSubmit}>\n         <label htmlFor={nameId}>Name</label>\n         <Input\n          id={nameId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. \n          For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n         <label htmlFor={numberId}>Number</label>\n         <Input\n          id={numberId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n       />  \n         <Button type=\"sybmit\">Add contact</Button>\n     </Form>\n  )\n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func\n}","import styled from 'styled-components';\n\nexport const Title = styled.div`\n    font-size: 30px;\n    font-weight: bold;\n    margin-bottom: 30px;\n    margin-left: 20px;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nexport default function Section({ title, children }) {\n    return (\n        <div>\n            <Title>{title}</Title>\n            {children}\n        </div>\n    )\n}\n\nSection.protoType = {\n    \"title\": PropTypes.string.isRequired,\n}","import styled from 'styled-components';\n\nexport const List = styled.ul`\n    margin-left: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-left: 20px;\n`;\n\nexport const Item = styled.li`\n    display: flex;\n    align-items: center;  \n    justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n    /* font-size: 20px; */\n    padding: 0 10px;\n    margin-left: 20px;\n    cursor: pointer;\n    border-color: #00000024;\n    border-radius: 2px;\n    background-color: #00000005;\n\n    &:hover, &:focus {\n\n        background-color: #2196f3;\n        transform: scale(1.22);\n    }\n`;","export const selectContacts = state => state.contacts;\n","export const selectFilter = state => state.filter;\nexport const selectFilterdContacts = ({ contacts, filter }) => {\n  \n           if (!filter) {\n            return contacts.items;  \n         }  \n        const normalizedFilter = filter.toLocaleLowerCase();\n        const filterdContacts = contacts.items.filter(({name, number}) => {\n        const normalizedName = name.toLocaleLowerCase();\n        const normalizedNumber = number.toLocaleLowerCase();\n        const result = normalizedName.includes(normalizedFilter) || normalizedNumber.includes(normalizedFilter);\n            return result;\n        }) \n       \n        return filterdContacts;\n    }","import PropTypes from 'prop-types';\nimport { Wrapper, Item, Button } from './ContactItem.styled';\nimport { MdContactPhone } from 'react-icons/md';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperetions';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { toast } from 'react-toastify';\nimport { selectFilterdContacts } from 'redux/filter/filterSelectors';\n\nexport default function ContactItem({ id, name, phone }) {  \n  const contacts = useSelector(selectFilterdContacts);\n  const { isLoading } = useSelector(selectContacts);\n  const dispatch = useDispatch();    \n\n    const removeContact = (id) => {\n    const action = deleteContact(id);\n    dispatch(action);\n\n    if (contacts.length === 1) {\n           dispatch(setFilter(\"\"));\n           \n        toast.info('No more contacts matching the filter.', {\n        position: \"top-left\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"colored\",\n       });\n      }   \n    }  \n    \n  return (\n    <Item key={id}>\n        <MdContactPhone size={18}/>\n        <Wrapper>\n            <span>{name}: </span>\n            <span>{phone}</span>\n       </Wrapper> \n            {isLoading ? <Button>Deleting...</Button> : <Button type='button' onClick={() => removeContact(id)} >Delete</Button>}\n     </Item>\n  )\n}\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    phone: PropTypes.string,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from './ContactList.styled';\nimport ContactItem from 'components/Contacts/ContactList/ContactItem/ContactItem';\n\n\nexport default function ContactList({ items }) {\n  return (\n    <List>\n      {\n        items.map(({ name, number, id }) => (\n          <ContactItem key={id} id={id} name={name} phone={number} />\n        ))}\n    </List>\n  );\n};\n\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    phone: PropTypes.string,\n  })),\n}\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n    display: block;\n    margin-top: 10px;\n    margin-bottom: 20px;\n    /* width: 300px;\n    height: 25px; */\n    border-color: #00000024;\n    border-radius: 2px;\n    outline: 0px;\n    \n    &:hover, &:focus {\n        box-shadow: 0px 0px 3px 3px #2196f3;\n        transform: scale(1.15);\n    }\n`;","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Input } from './Filter.styled';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from 'redux/filter/filterSlice';\n\nexport default function Filter() {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();    \n    const filterId = nanoid();\n    \n  const handleChange = (evt) => {\n      const { value } = evt.target;\n      dispatch(setFilter(value));\n    }\n\n  return (\n      <div>\n          <label htmlFor={filterId}>Find contacts by name</label>\n            <Input\n                id={filterId}\n                type=\"text\"\n                name=\"filter\"\n                onChange={handleChange}\n                value={filter} />\n     </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({message}) {\n  return (\n      <div>{message}</div>\n  )\n}\n\n\nNotification.protoType = {\n    \"message\": PropTypes.string.isRequired,\n};","import ContactList from 'components/Contacts/ContactList/ContactList';\nimport Filter from 'components/Contacts/Filter/Filter';\nimport Section from \"components/Section/Section\";\nimport Notification from \"components/Notification/Notification\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectContacts} from 'redux/contacts/contactsSelectors';\nimport { selectFilter, selectFilterdContacts } from 'redux/filter/filterSelectors';\nimport { fetchContacts } from \"redux/contacts/contactsOperetions\";\nimport { useEffect } from \"react\";\nimport { Wrapper } from './Contacts.styled';\n\nexport default function Contacts() {\n  const contacts = useSelector(selectFilterdContacts);\n  const { isLoading, error } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();    \n\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n      \n\n  return (\n    <Wrapper>\n        {isLoading && !error && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n      {/* {!isLoading && contacts.length ? */}\n        {!isLoading ?\n          <Section title=\"Contacts\">\n              <Filter />\n              <ContactList items={contacts}  />\n           </Section> :\n        (isLoading && filter.length > 0 ? null : <Notification message=\"There is no contacts\"></Notification>)\n      }\n      {filter && !contacts.length && <Notification message=\"No contact on request\"></Notification> }\n      </Wrapper>\n  )\n}\n\n","import React from 'react';\nimport { Container } from \"components/App/App.styled\";\nimport ContactForm from 'components/Contacts/ContactForm/ContactForm';\nimport Section from \"components/Section/Section\";\nimport Contacts from \"components/Contacts/Contacts\"; \nimport { ToastContainer } from 'react-toastify';\n// import { useAuth } from 'shared/hooks/useAuth';\n// import { Navigate } from 'react-router-dom';\n\nexport default function ContactsPage() {\n//  const isUserLogin = useAuth();\n\n  return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm  />\n        </Section>\n          <ToastContainer position=\"top-left\" autoClose={3000} />\n          <Contacts />\n    </Container> \n  )\n}\n\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Container","styled","Form","Input","Button","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","nameId","nanoid","numberId","handleChange","evt","target","value","onAddContact","contact","action","addContact","console","log","onSubmit","preventDefault","htmlFor","id","type","pattern","title","required","onChange","Title","Section","children","protoType","PropTypes","List","Wrapper","Item","selectContacts","state","contacts","selectFilter","filter","selectFilterdContacts","items","normalizedFilter","toLocaleLowerCase","normalizedName","normalizedNumber","includes","ContactItem","phone","useSelector","isLoading","size","onClick","deleteContact","length","setFilter","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","removeContact","ContactList","map","Filter","filterId","Notification","message","Contacts","error","useEffect","fetchContacts","ContactsPage","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}